<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd"
	default-autowire="byType" default-lazy-init="true">

	<beans:description>使用SpringSecurity的安全配置文件
	</beans:description>


	<beans:bean id="anonymousProcessingFilter" 
	    class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter"> 
	  <beans:property name="key" value="foobar"/> 
	  <beans:property name="userAttribute" value="anonymousUser,AUTH_ANONYMOUS"/> 
	</beans:bean> 
	
	<beans:bean id="anonymousAuthenticationProvider" 
	    class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider"> 
	  <beans:property name="key" value="foobar"/> 
	</beans:bean>

	<!-- 在此定义URL与授权的关系. 而用户、角色、授权及三者的关系则保存在数据库中. -->
	<http auto-config="true" access-decision-manager-ref="accessDecisionManager">
		<intercept-url pattern="/user/user!save*" access="AUTH_MODIFY_USER" />
		<intercept-url pattern="/user/user!delete*" access="AUTH_MODIFY_USER" />
		<!-- intercept-url pattern="/user/user*" access="AUTH_ANONYMOUS,AUTH_VIEW_USER" /> -->
		<intercept-url pattern="/user/role!save*" access="AUTH_MODIFY_ROLE" />
		<intercept-url pattern="/user/role!delete*" access="AUTH_MODIFY_ROLE" />
		<intercept-url pattern="/user/role*" access="AUTH_VIEW_ROLE" />
		<form-login login-page="/login.action" default-target-url="/user/user.action"
			authentication-failure-url="/login.action?error=true" />
		<logout logout-success-url="/" />
		<remember-me user-service-ref="UserDetailsService"
			key="e37f4b31-0c45-11dd-bd0b-0800200c9a66" />
	</http>

	<authentication-provider user-service-ref="UserDetailsService">
		<!--
			<password-encoder hash="plaintext" /> 可设置hash使用sha1或md5散列密码后再存入数据库
		-->
		<password-encoder ref="passwordEncoder" />

	</authentication-provider>

	<beans:bean id="passwordEncoder"
		class="org.springframework.security.providers.encoding.Md5PasswordEncoder" />

	<beans:bean id="UserDetailsService"
		class="org.supermy.core.service.UserDetailsServiceImpl" />

	<!-- 将授权的默认前缀由ROLE_改为AUTH_ -->
	<beans:bean id="accessDecisionManager"
		class="org.springframework.security.vote.AffirmativeBased">
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.vote.RoleVoter">
					<beans:property name="rolePrefix" value="AUTH_" />
				</beans:bean>
				<beans:bean class="org.springframework.security.vote.AuthenticatedVoter" />
			</beans:list>
		</beans:property>
	</beans:bean>
</beans:beans>